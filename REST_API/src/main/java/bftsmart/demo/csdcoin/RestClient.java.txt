package bftsmart.demo.csdcoin;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.InputStream;
import java.net.ServerSocket;
import java.net.Socket;

public class RestClient {

    private static ServerSocket server;
    //socket server port on which it will listen
    private static int port = 6666;
    private static CsdClient client ;

    public static void main(String[] args) throws IOException, ClassNotFoundException {
        client = new CsdClient(port);
        ServerSocket ss = new ServerSocket(port);
        //keep listens indefinitely until receives 'exit' call or program terminates
        while(true){        
        System.out.println("ServerSocket awaiting connections...");
        Socket socket = ss.accept(); // blocking call, this will wait until a connection is attempted on this port.
        System.out.println("Connection from " + socket + "!");

        // get the input stream from the connected socket
        InputStream inputStream = socket.getInputStream();
        // create a DataInputStream so we can read data from it.
        ObjectInputStream objectInputStream = new ObjectInputStream(inputStream);

        // read the list of messages from the socket
        Message message = (Message) objectInputStream.readObject();
            System.out.println("Message Received: ");
            Message response =client.operationHash(message);
	System.out.println("Enviou para as replicas");

            //create ObjectOutputStream object
            ObjectOutputStream oos = new ObjectOutputStream(socket.getOutputStream());
            //write object to Socket
            oos.writeObject(response);
            System.out.println("Enviou resposta ao cliente");
            //close resources
	    //objectInputStream.close();
            //oos.close();
            socket.close();
            //terminate the server if client sends exit request
        }
    }
}
